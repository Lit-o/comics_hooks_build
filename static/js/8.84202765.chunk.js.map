{"version":3,"sources":["components/someDynImportFunc.js"],"names":["logger","console","log","loggerSec"],"mappings":"iGAAe,SAASA,IACpBC,QAAQC,IAAI,mBAGT,SAASC,IACZF,QAAQC,IAAI,4BALhB","file":"static/js/8.84202765.chunk.js","sourcesContent":["export default function logger() {\n    console.log('Wake up, Neo...')\n}\n\nexport function loggerSec() {\n    console.log('Wake up, Neo... Again...')\n}\n\n\n\n// const addedChars = async (res) => {\n\n//     деструктуризация динамического импорта, чтобы в дальнейшем пользоваться сущностями\n//     const {logger, loggerSec} = await import('./someFunc')\n//     logger()\n//     loggerSec()\n\n//     let ended = false;\n//     if (res.length < 9) {\n//         ended = true\n//     }\n//     setChars(chars => [...chars, ...res])\n\n//     setIsNewCharsLoading(false)\n//     setOffset(offset => offset + 9)\n//     setCharsEnded(ended)\n// }\n\n// if (isLoading) {\n//     // динамический импорт всегда возвращает promise с объектом загружаемого модуля\n//     import('./someFunc')\n//         // если экспорт именованный, мы обращаемся к имени функции\n//         // .then(obj => obj.logger())\n//         // если экспорт дефолтный, мы обращаемся к дефолту\n//         .then(obj => obj.default())\n//         .catch(console.log('dynamic import is fail'))\n// }"],"sourceRoot":""}